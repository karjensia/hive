From 53c9c6af29f3cf08504717a0e7081521b536041a Mon Sep 17 00:00:00 2001
From: Slim Bouguerra <bslim@apache.org>
Date: Tue, 21 Jan 2020 11:02:57 -0800
Subject: [PATCH 2578/5664] HIVE-22558 : Metastore: Passwords jceks should be
 read lazily, in case of connection pools (Slim Bouguerra via Ashutosh
 Chauhan)

Signed-off-by: Ashutosh Chauhan <hashutosh@apache.org>
---
 .../hive/metastore/PersistenceManagerProvider.java   | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/PersistenceManagerProvider.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/PersistenceManagerProvider.java
index 7e9522b..97a917c 100644
--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/PersistenceManagerProvider.java
+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/PersistenceManagerProvider.java
@@ -20,6 +20,7 @@
 package org.apache.hadoop.hive.metastore;
 
 import com.google.common.annotations.VisibleForTesting;
+import com.google.common.base.Suppliers;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hive.metastore.conf.MetastoreConf;
 import org.apache.hadoop.hive.metastore.conf.MetastoreConf.ConfVars;
@@ -88,6 +89,7 @@
   private static boolean forTwoMetastoreTesting;
   private static int retryLimit;
   private static long retryInterval;
+  private static com.google.common.base.Supplier<String> passwordProvider;
 
   static {
     Map<String, Class<?>> map = new HashMap<>();
@@ -450,16 +452,18 @@ private static Properties getDataSourceProps(Configuration conf) {
     */
 
     // Password may no longer be in the conf, use getPassword()
-    try {
-      String passwd = MetastoreConf.getPassword(conf, MetastoreConf.ConfVars.PWD);
-      if (org.apache.commons.lang.StringUtils.isNotEmpty(passwd)) {
-        // We can get away with the use of varname here because varname == hiveName for PWD
-        prop.setProperty(ConfVars.PWD.getVarname(), passwd);
+    passwordProvider = passwordProvider != null ? passwordProvider : Suppliers.memoize(() -> {
+      try {
+        return MetastoreConf.getPassword(conf, ConfVars.PWD);
+      } catch (IOException err) {
+        throw new RuntimeException("Error getting metastore password: " + err.getMessage(), err);
       }
-    } catch (IOException err) {
-      throw new RuntimeException("Error getting metastore password: " + err.getMessage(), err);
+    });
+    String passwd = passwordProvider.get();
+    if (org.apache.commons.lang.StringUtils.isNotEmpty(passwd)) {
+      // We can get away with the use of varname here because varname == hiveName for PWD
+      prop.setProperty(ConfVars.PWD.getVarname(), passwd);
     }
-
     if (LOG.isDebugEnabled()) {
       for (Entry<Object, Object> e : prop.entrySet()) {
         if (MetastoreConf.isPrintable(e.getKey().toString())) {
-- 
1.8.3.1

